{
	"function component": {
		"prefix": "fc",
		"description": "",
		"scope": "typescriptreact",
		"body": [
			"import type { FC } from \"react\";",
			"import type { ICommonProps } from \"@/types\";",
			"import { useTranslate } from '@tolgee/react';",
			"import component from \"@/hoc/component\";",
			"import clsx from \"clsx\";",
			"import css from \"./index.module.scss\";",
			"",
			"",
			"interface IProps extends ICommonProps {",
			"}",
			"",
			"",
			"const Temp: FC<IProps> = ({",
			"  className,",
			"  ...rest",
			"}) => {",
			"",
			"  const { t } = useTranslate();",
			"",
			"  return (",
			"    <div",
			"      className={clsx(css.temp, className)}",
			"      {...rest}",
			"    >",
			"    </div>",
			"  );",
			"};",
			"",
			"export default component<IProps>(Temp);",
			""
		]
	}
	// Place your leact 工作区 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
}
